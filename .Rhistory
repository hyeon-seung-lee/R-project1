source = 'google')
attSeoulCoords <- geocode(location = seoul_attractions,
output = 'latlona',
source = 'google')
attSeoulCoords
View(attSeoulCoords)
attSeoulCoords[89,]
merge(seoul_attractions,attSeoulCoords, by = 'key')
merge(seoul_attractions,attSeoulCoords)
attSeoulCoords
cbind(seoul_attractions,attSeoulCoords)
View(cbind(seoul_attractions,attSeoulCoords))
att_Seoul_data <- View(cbind(seoul_attractions,attSeoulCoords))
att_Seoul_data <- cbind(seoul_attractions,attSeoulCoords)
write.csv(att_Seoul_data,file = 'data/주소/att_seoul_coord.csv')
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop, size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), , data = att_Seoul_data, size =2.5) +
geom_label_repel(
aes(x, y, label = label),
data=n,
family = 'Times',
size = 4,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
library(ggrepel)
library(data.table)
library(lubridate)
library(ggplot2)
library(dplyr)
library(data.table)
library(ggrepel)
library(tidyverse)
library(ggmap)
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), , data = att_Seoul_data, size =2.5) +
geom_label_repel(
aes(x, y, label = label),
data=n,
family = 'Times',
size = 4,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# 구별 center data 또는 동, 서, 남, 북, 중앙 등의 좌표 데이터
# 주요 관광지 주소와 좌표 데이터
# 상권 주소값 전체에 대한 주소 데이터면 좋음
att_Seoul_df<-as.data.frame(att_Seoul_data)
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =2.5) +
geom_label_repel(
aes(x, y, label = label),
data=n,
family = 'Times',
size = 4,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
View(att_Seoul_df)
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =2.5) +
geom_label_repel(
aes(x, y, label = label),
data=att_Seoul_df,
#family = 'Times',
size = 4,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =2.5) +
geom_label_repel(
aes(x=lon, y=lat),
data=att_Seoul_df,
#family = 'Times',
size = 4,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =2.5) +
geom_label_repel(
aes(x=lon, y=lat, label = seoul_attractions),
data=att_Seoul_df,
#family = 'Times',
size = 4,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =2.5) +
geom_label_repel(
aes(x=lon, y=lat, label = seoul_attractions),
data=att_Seoul_df,
#family = 'Times',
size = 2.5,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =1.5) +
geom_label_repel(
aes(x=lon, y=lat, label = seoul_attractions),
data=att_Seoul_df,
#family = 'Times',
size = 1.5,
box.padding = 0.1, point.padding = 0.1,
segment.color = 'grey50')
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =1.5) +
geom_label_repel(
aes(x=lon, y=lat, label = seoul_attractions),
data=att_Seoul_df,
#family = 'Times',
size = 1.5,
box.padding = 0.2, point.padding = 0.3,
segment.color = 'grey50')
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =1.5) +
geom_label_repel(
aes(x=lon, y=lat, label = seoul_attractions),
data=att_Seoul_df,
#family = 'Times',
size = 2,
box.padding = 0, point.padding = 0,
segment.color = 'grey50')
sgm     <-ggmap( get_googlemap(center=cen,
maptype='roadmap',
zoom=13,
size=c(640,640),
color = 'color'))
# 관광지 데이터로 인덱스를 만들어 보자
sgm + geom_point(aes(x = long, y = lat ), data = flow19_tot_flpop,
size = 1.8, alpha=0.25, color = 'red') +
theme(legend.position="bottom")+
geom_point(aes(x = lon, y = lat, stroke = 2), data = att_Seoul_df, size =1.5) +
geom_label_repel(
aes(x=lon, y=lat, label = seoul_attractions),
data=att_Seoul_df,
#family = 'Times',
size = 2,
box.padding = 0, point.padding = 0,
segment.color = 'grey50')
rm(list = ls())
flow17_comname<-read.csv(file = 'data/flow201417상권명.csv')
flow18_comname<-read.csv(file = 'data/flow2018상권명.csv')
flow19_comname<-read.csv(file = 'data/flow2019상권명.csv')
flow19_comname<-read_excel('data/flow2019상권명.xlsx')
coords19 <- geocode(location = flow19_comname,
output = 'latlona',
source = 'google')
View(flow19_comname)
coords19 <- geocode(location = flow19_comname$trdar_cd_nm,
output = 'latlona',
source = 'google')
16000/5
num17 = c(1:3200)
16000/500
num17 = c(1:32)
num17 = c(num17*5,16160)
num17
num17 = c(1:32)
num17 = c(num17*500,16160)
num17
4000/500
num18 = c(1:8)
num18 = c(num18*500,4040)
num19 = c(500, 1011)
num18[-32]
num18
num18[-8]
num18 = num18[-8]
num17 = num17[-32]
register_google(key='AIzaSyBQsv4dm2o6hBfchlPQDMpMyRdkLsk-3k8') # 부여받은 키 등록
library(ggmap)
library(ggrepel)
register_google(key='AIzaSyBQsv4dm2o6hBfchlPQDMpMyRdkLsk-3k8') # 부여받은 키 등록
# 19년도 상권명에 따른 좌표
coords19 <- geocode(location = flow19_comname$trdar_cd_nm,
output = 'latlona',
source = 'google')
flow19_comname
append(num17[1],1)
num17
num17 = c(1:32)
num17 = c(1,num17*500,16160)
num17 = num17[-32]
# Geocode를 500개씩 나누어 처리하기 위해 벡터값 생성
16000/500
num17 = c(1:32)
num17 = c(1,num17*500,16160)
num17 = num17[-33]
num17
num18 = c(1:8)
num18 = c(1,num18*500,4040)
num18 = num18[-9]
num18
num19 = c(1,500, 1011)
for (i in length(num19)){
co19[i] = flow19_comname[num19[i]:num19[i+1]]
}
length(num19)
for (i in 1:(length(num19)-1)){
co19[i] = flow19_comname[num19[i]:num19[i+1]]
}
for (i in 1:(length(num19)-1)){
co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
}
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
x = i + x
}
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
x = i
}
x = 0
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
x = i + x
}
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
col19[i] = i
}
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
col19 = i
}
col19
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
col19[i] = i
}
col19
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
col19[i] = num19[i]
}
col19
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
col19[i] = num19[i]-num19[i+1]
}
col19
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
col19[i] = flow19_comname[i]-num19[i+1]
}
for (i in 1:(length(num19)-1)){
#  co19[i] = flow19_comname[num19[i]:num19[(i+1)]]
col19[i] = flow19_comname[i]
}
flow19_comname[num19[1]:num19[2]]
num19[1]
num19[2]
num19[3]
flow19_comname[1:5]
flow19_comname[1:5,1]
for (i in 1:(length(num19)-1)){
co19[i] = flow19_comname[num19[i]:num19[i+1],1]
}
co19 = flow19_comname[1:5,1]
co19
co19[1] = flow19_comname[1:5,1]
co19[2]
co19[1]
for (i in 1:(length(num19)-1)){
co19 [i,1]= flow19_comname[num19[i]:num19[i+1],1]
}
for (i in 1:(length(num19)-1)){
co19 [i]= flow19_comname[num19[i]:num19[i+1],1]
}
for (i in 1:(length(num19)-1)){
co19[i]= flow19_comname[num19[i]:num19[i+1],1]
}
rm(list = ls())
flow17_comname<-read.csv(file = 'data/flow201417상권명.csv')
flow18_comname<-read.csv(file = 'data/flow2018상권명.csv')
flow19_comname<-read_excel('data/flow2019상권명.xlsx')
flow19_comname<-read_excel('data/flow2019상권명.xlsx')
library(readxl)
flow19_comname<-read_excel('data/flow2019상권명.xlsx')
num17 = c(1:32)
num17 = c(1,num17*500,16160)
num17 = num17[-33]
num17
num18 = c(1:8)
num18 = c(1,num18*500,4040)
num18 = num18[-9]
num18
num19 = c(1,500, 1011)
col[length(num19)]
length(num19)
flow19_comname
co19 <- data.frame(trdar_cd_nm)
for (i in 1:(length(num19)-1)){
co19= data.frame(flow19_comname[num19[i]:num19[i+1],1])
}
co19
for (i in 1:(length(num19)-1)){
co19= list(data.frame(flow19_comname[num19[i]:num19[i+1],1]))
}
co19
co19[[2]]
for (i in 1:(length(num19)-1)){
co19[[i]]= list(data.frame(flow19_comname[num19[i]:num19[i+1],1]))
}
co19[[2]]
str(co19)
co19[[1]]
for (i in 1:(length(num18)-1)){
co18[[i]]= list(data.frame(flow18_comname[num18[i]:num18[i+1],1]))
}
for (i in 1:(length(num18)-1)){
co18[[i]]= list(data.frame(flow18_comname[num18[i]:num18[i+1],1]))
}
# 데이터 프레임 500개씩 쪼개기 <- Geocode 하기 위하여
for (i in 1:(length(num19)-1)){
co19[[i]]= list(data.frame(flow19_comname[num19[i]:num19[i+1],1]))
}
str(co19)
flow18_comname
for (i in 1:(length(num18)-1)){
co18[[i]]= list(data.frame(flow18_comname[num18[i]:num18[i+1],1]))
}
for (i in 1:(length(num18)-1)){
co18[[i]]= list(data.frame(flow18_comname[num18[i]:num18[i+1],1]))
}
for (i in 1:(length(num18)-1)){
#  co18[[i]]= list(data.frame(flow18_comname[num18[i]:num18[i+1],1]))
co18[[i]] = 1
}
for (i in 1:(length(num18)-1)){
#  co18[[i]]= list(data.frame(flow18_comname[num18[i]:num18[i+1],1]))
co19[[i]] = 1
}
# 데이터 프레임 500개씩 쪼개기 <- Geocode 하기 위하여
for (i in 1:(length(num19)-1)){
co19[[i]]= list(data.frame(flow19_comname[num19[i]:num19[i+1],1]))
}
co19 = list()
# 데이터 프레임 500개씩 쪼개기 <- Geocode 하기 위하여
for (i in 1:(length(num19)-1)){
co19[[i]]= list(data.frame(flow19_comname[num19[i]:num19[i+1],1]))
}
co18 = list()
for (i in 1:(length(num18)-1)){
co18[[i]]= list(data.frame(flow18_comname[num18[i]:num18[i+1],1]))
}
co17 = list()
for (i in 1:(length(num18)-1)){
co17[[i]]= list(data.frame(flow17_comname[num17[i]:num17[i+1],1]))
}
for (i in 1:(length(num17)-1)){
co17[[i]]= list(data.frame(flow17_comname[num17[i]:num17[i+1],1]))
}
#Geocode 다시하자
coord19 = list()
for (i in 1:(length(num19)-1)){
coords19[[i]] <- geocode(location = co19[[i]]$trdar_cd_nm,
output = 'latlona',
source = 'google')
}
co19[[i]]$trdar_cd_nm
co19[[1]]$trdar_cd_nm
co19[[1]]
for (i in 1:(length(num19)-1)){
coords19[[i]] <- geocode(location = co19[[i]],
output = 'latlona',
source = 'google')
}
co19[[i]]$trdar_cd_nm
co19[[i]$trdar_cd_nm]
co19$trdar_cd_nm[[1]]
co19[[1]] %>% trdar_cd_nm
co19[[1]] %>% select(trdar_cd_nm)
library(dplyr)
co19[[1]] %>% select(trdar_cd_nm)
co19[[1]][1]
for (i in 1:(length(num19)-1)){
coords19[[i]] <- geocode(location = co19[[i]][1],
output = 'latlona',
source = 'google')
}
co19[[i]][,1]
co19[[i]][2]
co19[[1]][2]
co19[[1]][1]
co19[[2]][1]
co19[[3]][1]
co19[[3]][1][1]
co19[[2]][1][1]
co19[[2]][1,3]
co19[[2]][3,1]
str(co19[[2]][1])
# 데이터 프레임 500개씩 쪼개기 <- Geocode 하기 위하여
for (i in 1:(length(num19)-1)){
co19[[i]]= list(as.vector(flow19_comname[num19[i]:num19[i+1],1]))
}
for (i in 1:(length(num18)-1)){
co18[[i]]= list(as.vector(flow18_comname[num18[i]:num18[i+1],1]))
}
for (i in 1:(length(num17)-1)){
co17[[i]]= list(as.vector(flow17_comname[num17[i]:num17[i+1],1]))
}
str(co19[[2]][1])
co19
co19
co19[[2]]
co19[[1]]
for (i in 1:(length(num19)-1)){
coords19[[i]] <- geocode(location = co19[[i]],
output = 'latlona',
source = 'google')
}
for (i in 1:(length(num19)-1)){
coords19[[i]] <- geocode(location = co19[[i]][1],
output = 'latlona',
source = 'google')
}
str(co19[[1]])
str(as.vector(co19[[1]]))
a = as.vector(co19[[1]])
a
str(a)
rm(a)
coords19[[i]] <- geocode(location = co19[[1]][1],
output = 'latlona',
source = 'google')
# 데이터 프레임 500개씩 쪼개기 <- Geocode 하기 위하여
for (i in 1:(length(num19)-1)){
co19[[i]]= list(as.vector.factor(flow19_comname[num19[i]:num19[i+1],1]))
}
for (i in 1:(length(num18)-1)){
co18[[i]]= list(as.vector.factor(flow18_comname[num18[i]:num18[i+1],1]))
}
for (i in 1:(length(num17)-1)){
co17[[i]]= list(as.vector.factor(flow17_comname[num17[i]:num17[i+1],1]))
}
str(co19[[1]])
rm(coord19)
str(co19)
co19
# 데이터 프레임 500개씩 쪼개기 <- Geocode 하기 위하여
for (i in 1:(length(num19)-1)){
co19[[i]]= list(as.vector(flow19_comname[num19[i]:num19[i+1],1]))
}
co19
co19[[i]]= list(as.vector.factor(flow19_comname[num19[i]:num19[i+1],1]))
co19
str(flow19_comname)
# 19년도 상권명에 따른 좌표
coords19 <- geocode(location = flow19_comname$trdar_cd_nm,
output = 'latlona',
source = 'google')
for (i in 1:(length(num18)-1)){
co18[[i]]= list(as.vector.factor(flow18_comname[num18[i]:num18[i+1],1]))
}
# 18년도 상권명에 따른 좌표
coords18 <- geocode(location = flow18_comname$trdar_cd_nm,
output = 'latlona',
source = 'google')
flow18_comname<-read.csv(file = 'data/flow2018상권명.csv')
# 18년도 상권명에 따른 좌표
coords18 <- geocode(location = flow18_comname$trdar_cd_nm,
output = 'latlona',
source = 'google')
flow18_comname$trdar_cd_nm
# 18년도 상권명에 따른 좌표
coords18 <- geocode(location = flow18_comname$trdar_cd_nm,
output = 'latlona',
source = 'google')
head(flow18_comname$trdar_cd_nm)
flow18_comname<-read.csv( file='data/flow2018상권명.csv',stringAsFactors = F)
flow18_comname<-read.csv( file='data/flow2018상권명.csv',stringAsFactors = F)
flow18_comname<-read.csv(file = 'data/flow2018상권명.csv',stringsAsFactors = F)
flow17_comname<-read.csv('data/flow201417상권명.csv', stringAsFactors = F)
flow17_comname<-read.csv(file = 'data/flow201417상권명.csv', stringAsFactors = F)
flow17_comname<-read.csv(file = 'data/flow201417상권명.csv',stringsAsFactors = F)
# 18년도 상권명에 따른 좌표
coords18 <- geocode(location = flow18_comname$trdar_cd_nm,
output = 'latlona',
source = 'google')
# 14~17년도 상권명에 따른 좌표
coords17 <- geocode(location = flow17_comname$trdar_cd_nm,
output = 'latlona',
source = 'google')
write.csv(coords17,file='data/everyCoords17.csv')
write.csv(coords18,file='data/everyCoords18.csv')

subway[498,3:4] = c( 127.141110,37.518278)
subway[505,3:4] = c(127.018113,37.627056)
# NA 값 수정
subway %>% filter(is.na(lat))
save(subway, file = 'save/subway.rdata')
# load
load("save/flow17.rdata")
load("save/flow18.rdata")
load("save/flow19.rdata")
load("save/add_total.rdata")        # 주소
load("save/att_seoul.rdata")        # 서울 명소
# 서울 지하철역과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,popup= ~statn_nm,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = subway
)
cen <- c(126.9894661,	37.53802834)
# 서울 지하철역과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,popup= ~statn_nm,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = subway
)
content <- content <- paste("<a>",flow19$trdar_cd_nm,"</a> : ",
flow19$tot_flpop_co)
# 서울 지하철역과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,popup= ~statn_nm,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = subway
)
View(flow19)
# k-means 분석 해보기
#1. 데이터세트 준비 -> 총 유동인구 데이터와 동이름, 좌표만 포함하는 데이터프레임 생성
str(flow19)
flow19_km <- flow19 %>%  select(trdar_cd_nm, tot_flpop_co,  lon, lat)
# 데이터 확인
head(flow19_km)
View(flow17)
View(subway)
flow19_km <- flow19 %>%  select(tot_flpop_co,  lon, lat)
# 데이터 확인
head(flow19_km)
#2. k-means 클러스터 생성
flow19_cluster <- kmean(flow19_cluster,20)
# k-means 분석 해보기
# 자주 쓰이는 변수
library(arules)
#2. k-means 클러스터 생성
flow19_cluster <- kmean(flow19_cluster,20)
# k-means 분석 해보기
# 자주 쓰이는 변수
library(stats)
#2. k-means 클러스터 생성
flow19_cluster <- kmean(flow19_cluster,20)
#2. k-means 클러스터 생성
flow19_cluster <- kmeans(flow19_cluster,20)
#2. k-means 클러스터 생성
flow19_cluster <- kmeans(flow19_km,20)
flow19_km <- flow19 %>%  select(tot_flpop_co,  lon, lat)
# 데이터 확인
head(flow19_km)
# 데이터 확인
str(flow19_km)
#2. k-means 클러스터 생성
flow19_cluster <- kmeans(flow19_km,20)
#2. k-means 클러스터 생성
# NA Check
flow19_km %>% filter(is.na)
#2. k-means 클러스터 생성
# NA Check
flow19_km %>% filter(is.na(tot_flpop_co))
#2. k-means 클러스터 생성
# NA Check
flow19_km %>% filter(is.na(lon))
#2. k-means 클러스터 생성
# NA Check
flow19 %>% filter(is.na(lon))
add_total %>% filter(is.na(lon))
add_total %>% filter(is.na(lon))
add_total %>% filter(is.na(lat))
View(add_total)
add_total[981,3:4] <- c( 126.930198,37.576169)
View(flow19)
View(flow18)
flow18 %>% filter(is.na(lon))
flow17 %>% filter(is.na(lon))
#id 열 제거
flow19 = flow19[,-536]
#id 열 제거
flow19 = flow19[,-535]
flow18 = flow18[,-536]
flow18 = flow18[,-535]
flow_17 = flow_17[,-536]
flow17 = flow17[,-536]
flow17 = flow17[,-535]
#Join
flow_19<- left_join(flow19, add_total, by = 'trdar_cd_nm')
#Join
flow19<- left_join(flow19, add_total, by = 'trdar_cd_nm')
rm(flow_19)
flow18<- left_join(flow18, add18_coord, by = 'trdar_cd_nm')
flow18<- left_join(flow18, add_total, by = 'trdar_cd_nm')
flow17<- left_join(flow17, add_total, by = 'trdar_cd_nm')
View(flow19)
#
flow19 <- read_excel('flowdata/flow2019.xlsx')
#
flow19 <- read_excel('flowdata/flow2019.xlsx')
flow18 <- read_excel('flowdata/flow2018.xlsx')
flow17 <- read_excel('flowdata/flow201417.xlsx')
#Join
flow19<- left_join(flow19, add_total, by = 'trdar_cd_nm')
flow18<- left_join(flow18, add_total, by = 'trdar_cd_nm')
flow17<- left_join(flow17, add_total, by = 'trdar_cd_nm')
#2. k-means 클러스터 생성
# NA Check
flow19 %>% filter(is.na(lon))
flow18 %>% filter(is.na(lon))
flow17 %>% filter(is.na(lon))
# load
load("save/flow17.rdata")
load("save/flow18.rdata")
load("save/flow19.rdata")
#
flow19 <- read_excel('flowdata/flow2019.xlsx')
flow18 <- read_excel('flowdata/flow2018.xlsx')
flow17 <- read_excel('flowdata/flow201417.xlsx')
#Join
flow19<- left_join(flow19, add_total, by = 'trdar_cd_nm')
flow18<- left_join(flow18, add_total, by = 'trdar_cd_nm')
flow17<- left_join(flow17, add_total, by = 'trdar_cd_nm')
#2. k-means 클러스터 생성
# NA Check
flow19 %>% filter(is.na(lon))
flow18 %>% filter(is.na(lon))
flow17 %>% filter(is.na(lon))
save(flow17,file = 'save/flow17.rdata')
save(flow18,file = 'save/flow18.rdata')
save(flow19,file = 'save/flow19.rdata')
add_total %>% filter(is.na(lat))
save(add_total, file = 'save/add_total.rdata')
#kmean 가동!
flow19_cluster <- kmeans(flow19_km,20)
flow19_km <- flow19 %>%  select(tot_flpop_co,  lon, lat)
flow19_km %>% filter(is.na(lon))
#kmean 가동!
flow19_cluster <- kmeans(flow19_km,20)
flow19c
flow19_cluster
View(flow19_cluster)
flow19_cluster[[1]]
flow19_cluster[[2]]
flow19_center <- flow19_cluster[[2]]
flow19_cluster[[3]]
flow19_cluster[[4]]
flow19_cluster[[5]]
View(flow19_cluster)
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,popup= ~statn_nm,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center
)
str(flow19_center)
View(flow19_center)
flow19_center <-as.data.frame( flow19_cluster[[2]])
View(flow19_center)
str(flow19_center)
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,popup= ~statn_nm,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center
)
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center
)
#kmean 가동!
flow19_cluster <- kmeans(flow19_km,15)
flow19_center <-as.data.frame( flow19_cluster[[2]])
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center
)
#kmean 가동!
flow19_cluster <- kmeans(flow19_km,5)
flow19_center <-as.data.frame( flow19_cluster[[2]])
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center
)
#좌표값을 위도가 아니라 상대 데이터로 정규화 -> 역정규화를 해야겠다.
normalization <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
View(flow19_cluster)
View(flow19_km)
flow19_km_n<- as.data.frame(lapply(flow19_km[2:3], normalize) )
flow19_km_n<- as.data.frame(lapply(flow19_km[2:3], normalization) )
flow19_km_n
View(flow19_km)
flow19_km_n %>% mutate(tot_flpop_co = flow19_km$tot_flpop_co)
flow19_cluster <- kmeans(flow19_km_n,5)
#역정규화
denormalization <- function(x) {
max_str <- max(concrete$strength)
min_str <- min(concrete$strength)
return((x*(max_str-min_str))+min_str)
}
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm<- denormalization(flow19_center$lon)
flow19_center_denorm<- denormalization(flow19_center$lon)
#역정규화
rm(denormalization())
#역정규화
rm(denormalization)
#역정규화
denormalization_lon <- function(x) {
max_str <- max(x$lon)
min_str <- min(x$lon)
return((x*(max_str-min_str))+min_str)
}
#역정규화
denormalization_lon <- function(x) {
max_str <- max(flow19_center$lon)
min_str <- min(flow19_center$lon)
return((x*(max_str-min_str))+min_str)
}
denormalization_lat <- function(x) {
max_str <- max(flow19_center$lat)
min_str <- min(flow19_center$lat)
return((x*(max_str-min_str))+min_str)
}
flow19_center_denorm<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- denormalization_lat(flow19_center$lat)
head(flow19_center_denorm)
#역정규화
denormalization_lon <- function(x) {
max_str <- max(flow19$lon)
min_str <- min(flow19$lon)
return((x*(max_str-min_str))+min_str)
}
denormalization_lat <- function(x) {
max_str <- max(flow19$lat)
min_str <- min(flow19$lat)
return((x*(max_str-min_str))+min_str)
}
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lat(flow19_center$lon)
head(flow19_center_denorm)
rm(flow19_center_denorm)
head(flow19_center_lon)
head(flow19_center_denorm_lon)
head(flow19_center_denorm_lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
head(flow19_center_denorm_lon)
flow19_center_denorm<- bind_cols(flow19_center_denorm_lat,flow19_center_denorm_lon)
flow19_center_denorm<- cbind(flow19_center_denorm_lat,flow19_center_denorm_lon)
flow19_center_denorm
View(flow19_center_denorm)
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
str(flow19_center_denorm)
flow19_center_denorm<- as.data.frames(cbind(flow19_center_denorm_lat,flow19_center_denorm_lon))
flow19_center_denorm<- as.data.frame(cbind(flow19_center_denorm_lat,flow19_center_denorm_lon)
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
str(flow19_center_denorm)
flow19_center_denorm<- as.data.frame(cbind(flow19_center_denorm_lat,flow19_center_denorm_lon))
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
View(flow19_center_denorm)
str(flow19_center_denorm)
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
flow19_cluster <- kmeans(flow19_km_n,10)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,15)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,20)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,23)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,21)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,22)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,23)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,24)
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,23)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,23)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)
View(subway)
#kmeans
flow19_cluster <- kmeans(flow19_km_n,23)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
# Cluster Center(20곳)과 유동인구를 표시하자
leaflet(flow19) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%                      #지도 초기값
addCircles(lng = ~lon, lat = ~lat, weight = 1,                          #유동인구
radius = (~nthroot(tot_flpop_co,3)*2.3), popup = content,
fillColor = 'red',color = NA, fillOpacity = 0.3) %>%
addMarkers( lng = ~lon,lat = ~lat,          #서울 지하철
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm
)

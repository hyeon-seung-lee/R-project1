flow19_km_n<- as.data.frame(lapply(flow19_km[2:3], normalization) )
flow19_km_n %>% mutate(tot_flpop_co = flow19_km$tot_flpop_co)
#kmeans                여기서 시작
set.seed(12)
flow19_cluster <- kmeans(flow19_km_n,23)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_group_data <-as.data.frame( flow19_cluster[[1]])
flow19_group <- flow19
flow19_group[,536] <- flow19_group_data
names(flow19_group)[536] <- c('group')
flow19_cluster[[2]]
table(flow19_group$group)
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(no = c(1:length(flow19_center_denorm_lat)),
lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
#2 leaflet
popup <- paste("Group ",flow19_center_denorm$no,"</br> Flow : ",
flow19_center_denorm$flow_total)
content <- paste("<a>",flow19$trdar_cd_nm,"</a> : ",
flow19$tot_flpop_co,'</br> Group ',flow19$group)
cen <- c(126.9894661,	37.53802834)
load('save/flow_color.rdata')
leaflet(flow19_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm,
popup = popup
)
flow19<-flow19_group
flow19_total<-flow19 %>% group_by(group)%>%  summarise(tot_flpop = sum(tot_flpop_co))
names(flow19_total)[1] = c('no')
names(flow19_total)[2] = c('flow_total')
flow19_total
flow19_center_denorm<-left_join(flow19_center_denorm, flow19_total, by = 'no')
flow19_center_denorm
content <- paste("<a>",flow19$trdar_cd_nm,"</a> : ",
flow19$tot_flpop_co,'</br> Group ',flow19$group)
popup <- paste("Group ",flow19_center_denorm$no,"</br> Flow : ",
flow19_center_denorm$flow_total)
leaflet(flow19_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm,
popup = popup
)
#17년도 total 데이터 전처리
#1. Group Data 합계 가능?
rm(list = ls())
#2) 연령별+토,일
#20대, 토,일
#2019년
load("save/flow19.rdata")
View(flow19)
flow19[,101:112]
str(flow19[,101:112])
View(flow19)
flow19_sat <-str(flow19[,101:106]) %>% summarise(sum())
flow19_sat <-str(flow19[,101:106])
flow19_sun <-str(flow19[,107:112])
flow19_sat <-flow19[,101:106]
flow19_sun <-flow19[,107:112]
View(flow19_sat)
flow19_sat <-flow19[,c(6,101:106)]
flow19_sun <-flow19[,c(6,107:112)]
View(flow19_sat)
flow19_sat %>% group_by(trdar_cd_nm) %>% summarise(sum(flow19[2:7]))
flow19_sat %>% group_by(trdar_cd_nm) %>% summarise(sum(flow19[,2:7]))
flow19_sat %>% group_by(trdar_cd_nm) %>% summarise(total =sum())
flow19_sat %>% mutate(total = rowSums(.[1:1010]))
flow19_sat %>% mutate(total = rowSums([1:1010]))
flow19_sat %>% mutate(total = rowSums(1:1010))
flow19_sat %>% mutate(total = rowSums(1:1010,2:7))
flow19_sat %>% mutate(total = rowSums(.[1:1010,2:7]))
flow19_total<-flow19_sat %>% mutate(total = rowSums(.[1:1010,2:7]))
View(flow19_total)
flow19_sat_total<-flow19_sat %>% mutate(total = rowSums(.[1:1010,2:7]))
flow19_sun_total<-flow19_sat %>% mutate(total = rowSums(.[1:1010,2:7]))
flow19_weekend <-flow19[,c(6,101:112)]
flow19_weekend_total<-flow19_weekend %>% mutate(total = rowSums(.[1:1010,2:7]))
#2018년
load("save/flow18.rdata")
flow18_sat <-flow18[,c(6,101:112)]
flow18_sun <-flow18[,c(6,107:112)]
flow18_weekend <-flow18[,c(6,101:112)]
flow18_sat_total<-flow18_sat %>% mutate(total = rowSums(.[1:1010,2:7]))
flow18_sun_total<-flow18_sat %>% mutate(total = rowSums(.[1:1010,2:7]))
flow18_sat_total<-flow18_sat %>% mutate(total = rowSums(.[1:4040,2:7]))
flow18_sun_total<-flow18_sat %>% mutate(total = rowSums(.[1:4040,2:7]))
flow18_weekend_total<-flow18_weekend %>% mutate(total = rowSums(.[1:4040,2:7]))
#1 kmeans.
flow19_km <- flow19 %>%  select(tot_flpop_co,  lon, lat)
#역정규화
denormalization_lon <- function(x) {
max_str <- max(flow19$lon)
min_str <- min(flow19$lon)
return((x*(max_str-min_str))+min_str)
}
denormalization_lat <- function(x) {
max_str <- max(flow19$lat)
min_str <- min(flow19$lat)
return((x*(max_str-min_str))+min_str)
}
#좌표값을 위도가 아니라 상대 데이터로 정규화 -> 역정규화를 해야겠다.
normalization <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
flow19_km_n<- as.data.frame(lapply(flow19_km[2:3], normalization) )
flow19_km_n %>% mutate(tot_flpop_co = flow19_km$tot_flpop_co)
#kmeans                여기서 시작
set.seed(12)
flow19_cluster <- kmeans(flow19_km_n,23)
flow19_center <-as.data.frame( flow19_cluster[[2]])
flow19_group_data <-as.data.frame( flow19_cluster[[1]])
flow19_group <- flow19
flow19_group[,536] <- flow19_group_data
names(flow19_group)[536] <- c('group')
flow19_cluster[[2]]
table(flow19_group$group)
flow19_center_denorm_lat<- denormalization_lat(flow19_center$lat)
flow19_center_denorm_lon<- denormalization_lon(flow19_center$lon)
flow19_center_denorm<- as.data.frame(cbind(no = c(1:length(flow19_center_denorm_lat)),
lat = flow19_center_denorm_lat,lon = flow19_center_denorm_lon))
#2 leaflet
popup <- paste("Group ",flow19_center_denorm$no,"</br> Flow : ",
flow19_center_denorm$flow_total)
content <- paste("<a>",flow19$trdar_cd_nm,"</a> : ",
flow19$tot_flpop_co,'</br> Group ',flow19$group)
cen <- c(126.9894661,	37.53802834)
load('save/flow_color.rdata')
leaflet(flow19_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm,
popup = popup
)
flow19<-flow19_group
flow19_total<-flow19 %>% group_by(group)%>%  summarise(tot_flpop = sum(tot_flpop_co))
names(flow19_total)[1] = c('no')
names(flow19_total)[2] = c('flow_total')
flow19_total
flow19_center_denorm<-left_join(flow19_center_denorm, flow19_total, by = 'no')
flow19_center_denorm
content <- paste("<a>",flow19$trdar_cd_nm,"</a> : ",
flow19$tot_flpop_co,'</br> Group ',flow19$group)
popup <- paste("Group ",flow19_center_denorm$no,"</br> Flow : ",
flow19_center_denorm$flow_total)
leaflet(flow19_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm,
popup = popup
)
View(flow19_weekend_total)
flow19_sat <-flow19[,c(6,101:112,536)]
flow19_sun <-flow19[,c(6,107:112,536)]
flow19_weekend <-flow19[,c(6,101:112,536)]
flow19_sat_total<-flow19_sat %>% mutate(total = rowSums(.[1:1010,2:7]))
flow19_sun_total<-flow19_sat %>% mutate(total = rowSums(.[1:1010,2:7]))
flow19_weekend_total<-flow19_weekend %>% mutate(total = rowSums(.[1:1010,2:7]))
View(flow19_group)
View(flow19_sat_total)
#content(유동인구),popup(중심점)
content <- paste("<a>",flow19_weekend_total$trdar_cd_nm,"</a> : ",
flow19_weekend_total$total,'</br> Group ',flow19_weekend_total$group)
leaflet(flow19_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm,
popup = popup
)
leaflet(flow19_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.5) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow19_center_denorm,
popup = popup
)
popup <- paste("Group ",flow18_center_denorm$no,"</br> Flow : ",
flow18_center_denorm$flow_total)
#2018년 20대 주말
load("save/flow18.rdata")
flow18_sat <-flow18[,c(6,101:112)]
flow18_sun <-flow18[,c(6,107:112)]
flow18_weekend <-flow18[,c(6,101:112)]
flow18_sat_total<-flow18_sat %>% mutate(total = rowSums(.[1:4040,2:7]))
flow18_sun_total<-flow18_sat %>% mutate(total = rowSums(.[1:4040,2:7]))
flow18_weekend_total<-flow18_weekend %>% mutate(total = rowSums(.[1:4040,2:7]))
#content(유동인구),popup(중심점)
# 유동인구에 weekend_total 적용
content <- paste("<a>",flow18_weekend_total$trdar_cd_nm,"</a> : ",
flow18_weekend_total$total,'</br> Group ',flow18_weekend_total$group)
popup <- paste("Group ",flow18_center_denorm$no,"</br> Flow : ",
flow18_center_denorm$flow_total)
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.5) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
#1 kmeans.
flow18_km <- flow18 %>%  select(tot_flpop_co,  lon, lat)
#역정규화
denormalization_lon <- function(x) {
max_str <- max(flow18$lon)
min_str <- min(flow18$lon)
return((x*(max_str-min_str))+min_str)
}
denormalization_lat <- function(x) {
max_str <- max(flow18$lat)
min_str <- min(flow18$lat)
return((x*(max_str-min_str))+min_str)
}
#좌표값을 위도가 아니라 상대 데이터로 정규화 -> 역정규화를 해야겠다.
normalization <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
flow18_km_n<- as.data.frame(lapply(flow18_km[2:3], normalization) )
flow18_km_n %>% mutate(tot_flpop_co = flow18_km$tot_flpop_co)
#kmeans                여기서 시작
set.seed(12)
flow18_cluster <- kmeans(flow18_km_n,23)
flow18_center <-as.data.frame( flow18_cluster[[2]])
flow18_group_data <-as.data.frame( flow18_cluster[[1]])
flow18_group <- flow18
flow18_group[,536] <- flow18_group_data
names(flow18_group)[536] <- c('group')
flow18_cluster[[2]]
table(flow18_group$group)
flow18_center_denorm_lat<- denormalization_lat(flow18_center$lat)
flow18_center_denorm_lon<- denormalization_lon(flow18_center$lon)
flow18_center_denorm<- as.data.frame(cbind(no = c(1:length(flow18_center_denorm_lat)),
lat = flow18_center_denorm_lat,lon = flow18_center_denorm_lon))
#2 leaflet
popup <- paste("Group ",flow18_center_denorm$no,"</br> Flow : ",
flow18_center_denorm$flow_total)
content <- paste("<a>",flow18$trdar_cd_nm,"</a> : ",
flow18$tot_flpop_co,'</br> Group ',flow18$group)
cen <- c(126.9894661,	37.53802834)
load('save/flow_color.rdata')
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
flow18<-flow18_group
flow18_total<-flow18 %>% group_by(group)%>%  summarise(tot_flpop = sum(tot_flpop_co))
names(flow18_total)[1] = c('no')
names(flow18_total)[2] = c('flow_total')
flow18_total
flow18_center_denorm<-left_join(flow18_center_denorm, flow18_total, by = 'no')
flow18_center_denorm
content <- paste("<a>",flow18$trdar_cd_nm,"</a> : ",
flow18$tot_flpop_co,'</br> Group ',flow18$group)
popup <- paste("Group ",flow18_center_denorm$no,"</br> Flow : ",
flow18_center_denorm$flow_total)
flow18_sat <-flow18[,c(6,101:112)]
flow18_sun <-flow18[,c(6,107:112)]
flow18_weekend <-flow18[,c(6,101:112)]
flow18_sat_total<-flow18_sat %>% mutate(total = rowSums(.[1:4040,2:7]))
flow18_sun_total<-flow18_sat %>% mutate(total = rowSums(.[1:4040,2:7]))
flow18_weekend_total<-flow18_weekend %>% mutate(total = rowSums(.[1:4040,2:7]))
#content(유동인구),popup(중심점)
# 유동인구에 weekend_total 적용
content <- paste("<a>",flow18_weekend_total$trdar_cd_nm,"</a> : ",
flow18_weekend_total$total,'</br> Group ',flow18_weekend_total$group)
popup <- paste("Group ",flow18_center_denorm$no,"</br> Flow : ",
flow18_center_denorm$flow_total)
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.5) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
#2019년 20대 수요일
load("save/flow19.rdata")
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.1) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.1) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
flow18_tuewedn <-flow18[,c(6,77:88)]
View(flow18_tuewedn)
flow18_tuewedn_total<-flow18_tuewedn %>% mutate(total = rowSums(.[1:4040,2:13]))
View(flow18)
flow18_weekend <-flow18[,c(6,101:112,534:536)]
flow18_weekend_total<-flow18_weekend %>% mutate(total = rowSums(.[1:4040,2:7]))
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.1) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.1) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
View(flow18_weekend_total)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.1)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.5)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.9)
View(flow18_group)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,2)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.9)
View(flow19_weekend_total)
# 오류의 원인이 numeric이 아니라서?
str(flow19_weekend_total)
flow18_weekend_total[,15]
View(flow18_weekend_total)
flow18_weekend_total[,17] <- as.numeric(flow18_weekend_total[,17])
str(flow18_weekend_total)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,2)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.9)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,2)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.5)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.5)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,2)*0.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.5)
leaflet(flow18_weekend_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,2)*0.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.2)
flow18_tuewedn <-flow18[,c(6,77:88,534:536)]
flow18_tuewedn_total<-flow18_tuewedn %>% mutate(total = rowSums(.[1:4040,2:13]))
flow18_tuewedn_total[,17] <- as.numeric(flow18_tuewedn_total[,17])
#content(유동인구),popup(중심점)
# 유동인구에 weekend_total 적용
content <- paste("<a>",flow19_tuewedn_total$trdar_cd_nm,"</a> : ",
flow19_tuewedn_total$total,'</br> Group ',flow19_tuewedn_total$group)
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,3)*2.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.5) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,2)*0.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.2) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
leaflet(flow18_tuewedn_total) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(total,2)*0.5), popup = content,
color = ~flow_color(group), fillOpacity = 0.2)
#19년도 total 데이터 전처리
#1. Group Data 합계 가능?
rm(list = ls())
load("save/flow18.rdata")
load('save/flow_color.rdata')
#1 kmeans.
flow18_km <- flow18 %>%  select(tot_flpop_co,  lon, lat)
#역정규화
denormalization_lon <- function(x) {
max_str <- max(flow18$lon)
min_str <- min(flow18$lon)
return((x*(max_str-min_str))+min_str)
}
denormalization_lat <- function(x) {
max_str <- max(flow18$lat)
min_str <- min(flow18$lat)
return((x*(max_str-min_str))+min_str)
}
#좌표값을 위도가 아니라 상대 데이터로 정규화 -> 역정규화를 해야겠다.
normalization <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
flow18_km_n<- as.data.frame(lapply(flow18_km[2:3], normalization) )
flow18_km_n %>% mutate(tot_flpop_co = flow18_km$tot_flpop_co)
#kmeans                여기서 시작
set.seed(12)
flow18_cluster <- kmeans(flow18_km_n,23)
flow18_center <-as.data.frame( flow18_cluster[[2]])
flow18_group_data <-as.data.frame( flow18_cluster[[1]])
flow18_group <- flow18
flow18_group[,536] <- flow18_group_data
names(flow18_group)[536] <- c('group')
flow18_cluster[[2]]
table(flow18_group$group)
flow18_center_denorm_lat<- denormalization_lat(flow18_center$lat)
flow18_center_denorm_lon<- denormalization_lon(flow18_center$lon)
flow18_center_denorm<- as.data.frame(cbind(no = c(1:length(flow18_center_denorm_lat)),
lat = flow18_center_denorm_lat,lon = flow18_center_denorm_lon))
#2 leaflet
popup <- paste("Group ",flow18_center_denorm$no,"</br> Flow : ",
flow18_center_denorm$flow_total)
content <- paste("<a>",flow18$trdar_cd_nm,"</a> : ",
flow18$tot_flpop_co,'</br> Group ',flow18$group)
cen <- c(126.9894661,	37.53802834)
load('save/flow_color.rdata')
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,2)*0.5), popup = content,      #3)*2.5 ->2)*0.5
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
flow18<-flow18_group
flow18_total<-flow18 %>% group_by(group)%>%  summarise(tot_flpop = sum(tot_flpop_co))
names(flow18_total)[1] = c('no')
names(flow18_total)[2] = c('flow_total')
flow18_total
flow18_center_denorm<-left_join(flow18_center_denorm, flow18_total, by = 'no')
flow18_center_denorm
content <- paste("<a>",flow18$trdar_cd_nm,"</a> : ",
flow18$tot_flpop_co,'</br> Group ',flow18$group)
popup <- paste("Group ",flow18_center_denorm$no,"</br> Flow : ",
flow18_center_denorm$flow_total)
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,2)*0.1), popup = content,      #3)*2.5 ->2)*0.5
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
leaflet(flow18_group) %>% addTiles() %>%
setView(lng = cen[1], lat = cen[2], zoom = 12) %>%
addCircles(lng = ~lon, lat = ~lat, weight = 1,
radius = (~nthroot(tot_flpop_co,2)*0.2), popup = content,      #3)*2.5 ->2)*0.5
color = ~flow_color(group), fillOpacity = 0.03) %>%
addMarkers( lng = ~lon,lat = ~lat,
options = popupOptions(closeButton = FALSE), data = flow18_center_denorm,
popup = popup
)
